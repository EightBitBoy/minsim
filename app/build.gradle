buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url 'https://maven.google.com' }
    }
    dependencies {
        classpath 'io.realm:realm-gradle-plugin:5.0.1'
        classpath 'com.stanfy.spoon:spoon-gradle-plugin:1.2.2'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.17.0'
        classpath 'com.atlassian.commonmark:commonmark:0.11.0'
        classpath 'org.codehaus.groovy:groovy-android-gradle-plugin:2.0.0'
        classpath 'gradle.plugin.de.eightbitboy:grafie:0.1.1'
    }
}

import org.commonmark.parser.Parser
import org.commonmark.renderer.html.HtmlRenderer

apply plugin: 'com.android.application'
apply plugin: 'groovyx.android'
apply plugin: 'realm-android'
apply plugin: 'spoon'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'de.eightbitboy.grafie'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId 'de.eightbitboy.minsim'
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "0.1.0"
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        debug {
            manifestPlaceholders = [
                    appName: "Minsim Debug"]
            debuggable = true

            applicationIdSuffix ".debug"
        }
        release {
            manifestPlaceholders = [
                    appName: "Minsim"]
            debuggable = false

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
        unitTests.all {
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen { false }
                showStandardStreams = true
            }
        }
    }
}

spoon {
    debug = true
    sequential = false
    grantAllPermissions = true
}

def grafiePassword = hasProperty('grafiepassword') ?
        property('grafiepassword') : System.getenv('GRAFIE_PASSWORD')

grafie {
    password = grafiePassword
}

task processMarkdown {
    File assets = new File('app/src/main/assets')
    if (!assets.exists()) {
        assets.mkdirs()
    }

    Parser parser = Parser.builder().build()
    HtmlRenderer renderer = HtmlRenderer.builder().build()

    new File('app/src/main/assets/about.html').withWriter('UTF-8') { w ->
        w.write(renderer.render(parser.parse(new File("README.md").text)))
    }

    new File('app/src/main/assets/changelog.html').withWriter('UTF-8') { w ->
        w.write(renderer.render(parser.parse(new File("CHANGELOG.md").text)))
    }
}

preBuild {
    dependsOn processMarkdown, decryptFiles
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:recyclerview-v7:27.1.1'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:support-vector-drawable:27.1.1'
    implementation 'com.jakewharton.timber:timber:4.7.0'
    implementation 'com.jakewharton:butterknife:8.8.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.3'
    implementation 'org.sufficientlysecure:html-textview:3.4'
    implementation 'com.google.firebase:firebase-crash:12.0.1'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:3.3.2'
    testImplementation 'org.spockframework:spock-core:1.1-groovy-2.4'
    androidTestImplementation 'com.squareup.spoon:spoon-client:1.7.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
}

apply plugin: 'com.google.gms.google-services'
